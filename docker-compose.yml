version: '3.8'

services:
  prism-core:
    build:
      context: ./core
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
    container_name: prism-core
    ports:
      - "9090:9090"  # API 端口
      - "7890:7890"  # 代理端口
    volumes:
      - prism_data:/app/data
      - prism_logs:/app/logs
      - ./core/config:/app/config:ro
    environment:
      - PRISM_CONFIG_PATH=/app/config/config.yaml
      - PRISM_DATA_PATH=/app/data
      - PRISM_LOG_LEVEL=${LOG_LEVEL:-info}
    restart: unless-stopped
    networks:
      - prism-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: prism-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-prism123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - prism-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 可选: Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: prism-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9091:9090"
    volumes:
      - ./scripts/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - prism-network
    profiles:
      - monitoring

  # 可选: Grafana 仪表盘
  grafana:
    image: grafana/grafana:latest
    container_name: prism-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./scripts/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - prism-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  prism_data:
    driver: local
  prism_logs:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  prism-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16